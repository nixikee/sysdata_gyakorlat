openapi: 3.0.1
info:
  title: InvoiceManager API
  description: Invoice and User Information
  version: 3.0.1
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/user/update_user/{id}:
    put:
      tags:
      - user-controller
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: boolean
  /api/user/update_password/{id}:
    put:
      tags:
      - user-controller
      operationId: updatePassword
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: boolean
  /api/invoice/update_status/{id}:
    put:
      tags:
      - invoice-controller
      operationId: updateStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStatus'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: boolean
  /api/invoice/update_invoice/{id}:
    put:
      tags:
      - invoice-controller
      operationId: updateInvoice
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: boolean
  /api/user/add_user:
    post:
      tags:
      - user-controller
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/upload:
    post:
      tags:
      - pdf-controller
      operationId: uploadFile
      requestBody:
        content:
          application/pdf:
            schema:
              type: object
              properties:
                short:
                  type: integer
                  format: int32
                char:
                  type: string
                int:
                  type: integer
                  format: int32
                long:
                  type: integer
                  format: int64
                float:
                  type: number
                  format: float
                double:
                  type: number
                  format: double
                direct:
                  type: boolean
                readOnly:
                  type: boolean
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/invoice/add_invoice:
    post:
      tags:
      - invoice-controller
      operationId: addInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Invoice'
  /api/auth/signup:
    post:
      tags:
      - auth-controller
      operationId: addUser_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/signout:
    post:
      tags:
      - auth-controller
      operationId: logoutUser
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/user/list_user:
    get:
      tags:
      - user-controller
      operationId: list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/user/find/{id}:
    get:
      tags:
      - user-controller
      operationId: findInvoiceByUserId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/invoice/list_invoice:
    get:
      tags:
      - invoice-controller
      operationId: list_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
  /api/invoice/find/{id}:
    get:
      tags:
      - invoice-controller
      operationId: findInternalInvoiceById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Invoice'
  /api/user/find/delete/{userId}:
    delete:
      tags:
      - user-controller
      operationId: deleteUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: boolean
  /api/invoice/find/delete/{id}:
    delete:
      tags:
      - invoice-controller
      operationId: deleteInvoice
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: boolean